#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt with apfree-wifidog using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Contributed: digitcloud
# Modified: liudf0716
#=================================================

name: Build ipq8065 OpenWrt with apfree-wifidog

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  REPO_URL: https://github.com/openwrt/openwrt.git
  REPO_BRANCH: openwrt-19.07
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: config.ipq806x
  APFREEWIFIDOG: apfreewifidog.sh
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: true
  UPLOAD_WETRANSFER: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: checkout
      uses: liudf0716/checkout@v2.3.4

    - name: initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone  $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: add third-party feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default 

    - name: update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: load custom configuration
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $APFREEWIFIDOG
        cd openwrt && $GITHUB_WORKSPACE/$APFREEWIFIDOG
    
    - name: download package
      run: |
        cd openwrt
        make download -j16 && make download -j16
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
          
    - name: compile the firmware
      id: compile
      run: |
        cd openwrt
        make tools/compile -j2 || make tools/compile -j1 V=s
        make target/compile -j2 || make target/compile -j1 V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +\"%Y%m%d%H%M\")" >> $GITHUB_ENV
 
    - name: apfree-wifidog compile
      id: apfree-wifidog-compile
      run: |
        cd openwrt
        make package/apfree-wifidog/compile V=s
 
    - name: move target file to download
      id: mk-dl
      run: |
        cd openwrt
        mkdir -p bin/downloads
        find bin/packages/ -name 'apfree-wifidog*.ipk' -exec cp  {} bin/downloads \;
        cp dl/apfree-wifidog* bin/downloads/

    - name: upload bin directory
      uses: liudf0716/upload-artifact@v2.2.2
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
         name: openwrt_apfree_wifidog_dl
         path: openwrt/bin/downloads

